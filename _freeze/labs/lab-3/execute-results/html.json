{
  "hash": "e71d8f546e1c4b1531a95a4703696af5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 3\"\n---\n\n\nThe goal of this lab is to solidify some of the skills and concepts from the first two weeks of the course.\n\n## Getting started\n\n1.  Use [these steps](https://sta101-f24.github.io/computing/computing-access.html) to navigate to the STA101 version of `RStudio` using the [Duke Container Manager](https://cmgr.oit.duke.edu/containers);\n\n2.  Use [these steps](https://sta101-f24.github.io/computing/computing-moving.html) to download all of the lab 3 files from our [Canvas page](https://canvas.duke.edu/courses/36641), upload them to your `RStudio` files, and move them into an appropriately named folder (`lab-3`, for instance);\n\n3.  Once `lab-3.qmd` is where it needs to be, open it, and verify that you can click the \"Render\" button in `RStudio` and get a PDF file. See [this answer](https://edstem.org/us/courses/64268/discussion/5216372?answer=12080244) on Ed if you want more guidance here;\n\n4.  Now proceed to complete the exercises in this lab.\n\n## Pointers\n\n-   For all visualizations you create, be sure to include informative titles for the plot, axes, and legend;\n-   Respond in complete sentences as much as possible;\n-   Be sure to observe good code style:\n    -   There is a line break after each `|>` in a pipeline or `+` in a ggplot;\n    -   There are spaces around `=` signs;\n    -   There is a space after each `,`;\n    -   Code is properly indented;\n    -   Code doesn't exceed 80 characters in each line, longer lines of code are spread across multiple lines with appropriately placed line breaks (so in the rendered PDF, your code shouldn't run off the page);\n    -   Code chunks are labeled, informatively and without spaces.\n\n## Packages\n\nIn this lab we will work with the tidyverse packages, which is a collection of packages for doing data analysis in a \"tidy\" way.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n```\n:::\n\n\n## Part 1: Nobel laureates\n\nWe will now consider a data set on the characteristics of winners (laureates) of a Nobel prize: `nobel.csv`. You can read it in using the following.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel <- read_csv(\"data/nobel.csv\")\n```\n:::\n\n\n::: callout-note\n[Recall](https://sta101-f24.github.io/computing/computing-file-paths.html) that you may have to adjust the file path to match how you have organized your files and folders.\n:::\n\nThe descriptions of the variables are as follows:\n\n1.  `id`: ID number\n2.  `firstname`: First name of laureate\n3.  `surname`: Surname\n4.  `year`: Year prize won\n5.  `category`: Category of prize\n6.  `affiliation`: Affiliation of laureate\n7.  `city`: City of laureate in prize year\n8.  `country`: Country of laureate in prize year\n9.  `born_date`: Birth date of laureate\n10. `died_date`: Death date of laureate\n11. `gender`: Gender of laureate\n12. `born_city`: City where laureate was born\n13. `born_country`: Country where laureate was born\n14. `born_country_code`: Code of country where laureate was born\n15. `died_city`: City where laureate died\n16. `died_country`: Country where laureate died\n17. `died_country_code`: Code of country where laureate died\n18. `overall_motivation`: Overall motivation for recognition\n19. `share`: Number of other winners award is shared with\n20. `motivation`: Motivation for recognition\n\nIn a few cases the name of the city/country changed after laureate was given (e.g. in 1975 Bosnia and Herzegovina was called the Socialist Federative Republic of Yugoslavia). In these cases the variables below reflect a different name than their counterparts without the suffix `_original`.\n\n21. `born_country_original`: Original country where laureate was born\n22. `born_city_original`: Original city where laureate was born\n23. `died_country_original`: Original country where laureate died\n24. `died_city_original`: Original city where laureate died\n25. `city_original`: Original city where laureate lived at the time of winning the award\n26. `country_original`: Original country where laureate lived at the time of winning the award\n\nThere are some observations in this dataset that we will exclude from our analysis. This code creates a new data frame called `nobel_living_science` that filters for\n\n-   laureates for whom `country` is available: `!is.na(country)`;\n-   laureates who are people as opposed to organizations, i.e., organizations are denoted with `\"org\"` as their `gender`: `gender != \"org\"`;\n-   laureates who are still alive, i.e., their `died_date` is `NA`: `is.na(died_date)`.\n-   laureates in the sciences (so not literature or peace).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel_living_science <- nobel |>\n  filter(!is.na(country) & gender != \"org\" & is.na(died_date)) |>\n  filter(category %in% c(\"Physics\", \"Medicine\", \"Chemistry\", \"Economics\"))\n```\n:::\n\n\nOnce you have filtered for these characteristics you are left with a data frame with 228 observations (check this!).\n\n> Most living Nobel laureates were based in the US when they won their prizes\n\n... says [this](https://www.buzzfeednews.com/article/peteraldhous/immigration-and-science) Buzzfeed article. Let's see if that's true.\n\nFirst, we'll create a new variable to identify whether the laureate was in the US when they won their prize. We'll use the `mutate()` function for this. The following pipeline mutates the `nobel_living_science` data frame by adding a new variable called `country_us`. We use an if statement to create this variable. The first argument in the `if_else()` function we're using to write this if statement is the condition we're testing for. If `country` is equal to `\"USA\"`, we set `country_us` to `\"USA\"`. If not, we set the `country_us` to `\"Other\"`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel_living_science <- nobel_living_science |>\n  mutate(\n    country_us = if_else(country == \"USA\", \"USA\", \"Other\")\n  )\n```\n:::\n\n\nFor the following exercises, work with the `nobel_living_science` data frame you created above.\n\n### Exercise 1\n\n::: exercise\nCreate a faceted bar plot visualizing the relationship between the category of prize and whether the laureate was in the US when they won the Nobel prize. Interpret your visualization, and say a few words about whether the Buzzfeed headline is supported by the data.\n\n-   Your visualization should be faceted by category;\n-   For each facet you should have two bars, one for winners in the US and one for Other;\n-   Flip the coordinates so the bars are horizontal, not vertical;\n-   Make sure everything is clearly labeled!\n:::\n\n### Exercise 2\n\nNext, let's investigate, of those US-based Nobel laureates, what proportion were born in other countries.\n\n::: exercise\nCreate a new variable called `born_country_us` in `nobel_living_science` that has the value `\"USA\"` if the laureate is born in the US, and `\"Other\"` otherwise. How many of the winners are born in the US?\n:::\n\n### Exercise 3\n\n::: exercise\nAdd a second variable to your visualization from Exercise 1 based on whether the laureate was born in the US or not.\n\nCreate two visualizations with this new variable added:\n\n-   Plot 1: Segmented frequency bar plot\n-   Plot 2: Segmented relative frequency bar plot (*Hint:* Add `position = \"fill\"` to `geom_bar()`.)\n\nHere are some instructions that apply to both of these visualizations:\n\n-   Your final visualization should contain a facet for each category.\n-   Within each facet, there should be two bars for whether the laureate won the award in the US or not.\n-   Each bar should have segments for whether the laureate was born in the US or not.\n\nWhich of these visualizations is a better fit for answering the following question: \"Do the data appear to support Buzzfeed's claim that of those US-based Nobel laureates, many were born in other countries?\" First, state which plot you're using to answer the question. Then, answer the question, explaining your reasoning in 1-2 sentences.\n:::\n\n## Part 2: practicing our coding basics\n\n### Exercise 4\n\nThe file `nsw-crime.csv` contains [monthly data](https://bocsar.nsw.gov.au/statistics-dashboards/open-datasets/criminal-offences-data.html) on all criminal incidents recorded by police in New South Wales, Australia (the state that includes the city of Sydney). So a row in this data set corresponds to a month, and a column corresponds to a crime (murder, dealing cannabis, escaping custody, etc). The data count the number of cases of each crime in each month. In this exercise we will consider the variable `offensive_language`, an incident of disorderly conduct where the perpetrator...said some things.\n\n::: exercise\nLoad the crime data into `R` and create four histogram plots of the variable `offensive_language`. In each plot, use a different number of histogram bins: 20, 40, 80, and 160. Decide which picture you think best visualizes the distribution of the crime counts, and explain why you think this.\n:::\n\n### Exercise 5\n\nLoad the data about the COVID delta variant (adjusting your file path as needed):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndelta <- read_csv(\"delta.csv\")\n```\n:::\n\n\n::: exercise\nConsider this sequence of commands:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# part 1\n\ndelta |>\n  count(vaccine, outcome)\n\n# part 2\n\ndelta |>\n  count(vaccine, outcome) |>\n  group_by(vaccine)\n\n# part 3\n\ndelta |>\n  count(vaccine, outcome) |>\n  group_by(vaccine) |>\n  mutate(prop = n / sum(n))\n```\n:::\n\n\nPick this code apart like a vulture and explain in complete sentences what is going on in each part. The more detail, the better.\n:::\n\n## Part 3: IMS Exercises\n\nThe exercises in this section do not require code. Make sure to answer the questions in full sentences.\n\n### Exercise 6\n\n::: exercise\nIMS - [Chapter 4 exercises](https://openintro-ims.netlify.app/explore-categorical#sec-chp4-exercises), #4: Raise taxes.\n:::\n\n### Exercise 7\n\n::: exercise\nIMS - [Chapter 5 exercises](https://openintro-ims.netlify.app/explore-numerical#sec-chp5-exercises), #4: Office productivity.\n:::\n\n### Exercise 8\n\n::: exercise\nIMS - [Chapter 5 exercises](https://openintro-ims.netlify.app/explore-numerical#sec-chp5-exercises), #15: Distributions and appropriate statistics.\n:::\n\n### Exercise 9\n\n::: exercise\nIMS - [Chapter 5 exercises](https://openintro-ims.netlify.app/explore-numerical#sec-chp5-exercises), #26: NYC marathon winners.\n:::\n\n## Part 4: waxing poetic\n\n### Exercise 10\n\n::: exercise\nDescribe a situation from your everyday life where you have to make a decision, but it is difficult to make a good decision because you face some uncertainty about the world. Common examples (which you should not now use!) might include deciding when to get food at the dining hall, because you are uncertain about the length of the lines, or deciding when to have a picnic, because you are uncertain about the weather. Next, describe some data (information) that, if you had access to it, would resolve some of the uncertainty you face and help you make a better decision. Describe two versions of the data: an ideal version that would theoretically resolve all of the uncertainty, and an imperfect version that you are more likely to actually encounter in practice. How would you use these data to guide your decision making?\n:::\n\n::: callout-note\nThis is basically going to be graded for completion, but I hope some of you will get creative, and I look forward to reading these!\n:::\n\n## Lastly\n\nRecommend some music for us to listen to while we grade this.\n\n## Wrap up\n\n### Submitting\n\n::: callout-important\nBefore you proceed, first, make sure that you have updated the document YAML with your name! Then, render your document one last time, for good measure.\n:::\n\nTo submit your assignment to Gradescope:\n\n-   Go to your Files pane and check the box next to the PDF output of your document (`lab-3.pdf`).\n\n-   Then, in the Files pane, go to More \\> Export. This will download the PDF file to your computer. Save it somewhere you can easily locate, e.g., your Downloads folder or your Desktop.\n\n-   Go to the course Canvas page and click on Gradescope and then click on the assignment. You'll be prompted to submit it.\n\n-   Mark the pages associated with each exercise. All of the papers of your lab should be associated with at least one question (i.e., should be \"checked\").\n\n::: callout-warning\nIf you fail to mark the pages associated with an exercise, that exercise won't be graded. This means, if you fail to mark the pages for all exercises, you will receive a 0 on the assignment. The TAs can't mark your pages for you, and for them to be able to grade, you must mark them.\n:::\n\n## Grading\n\n| Exercise    | Points |\n|-------------|--------|\n| Exercise 1  | 8      |\n| Exercise 2  | 6      |\n| Exercise 3  | 8      |\n| Exercise 4  | 6      |\n| Exercise 5  | 6      |\n| Exercise 6  | 2      |\n| Exercise 7  | 2      |\n| Exercise 8  | 5      |\n| Exercise 9  | 4      |\n| Exercise 10 | 3      |\n| **Total**   | 50     |\n",
    "supporting": [
      "lab-3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}