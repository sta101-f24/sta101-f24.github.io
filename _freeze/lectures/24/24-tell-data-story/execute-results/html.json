{
  "hash": "e6d3596a216f71ba452c16333d06887a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Telling a data story\"\nsubtitle: Lecture 24\nformat: revealjs\nauto-stretch: false\n---\n\n\n# Warm up\n\n## Announcements {.smaller}\n\n-   Check grades on Canvas, if anything seems off let me know asap. Your final grade will be calculated based on what's on Canvas. No grades will be changed after the project is due.\n-   My office hours next week by appointment.\n-   Don't forget to fill out course and TA evaluations.\n-   Project 2:\n    -   Friday - Peer review. You must be in your lab section to participate in the peer review (and be eligible for the points for it).\n    -   Next Thursday - Video (upload to YouTube/Warpwire/etc. and share link on Google sheet) + writeup (on Gradescope) due.\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(ggrepel)\nlibrary(ggthemes)\nlibrary(palmerpenguins)\n```\n:::\n\n\n# Telling a story\n\n## Multiple ways of telling a story\n\n-   Sequential reveal: Motivation, then resolution\n\n-   Instant reveal: Resolution, and hidden in it motivation\n\n## Simplicity vs. complexity {.smaller}\n\n> When you're trying to show too much data at once you may end up not showing anything.\n\n-   Never assume your audience can rapidly process complex visual displays\n\n-   Don't add variables to your plot that are tangential to your story\n\n-   Don't jump straight to a highly complex figure; first show an easily digestible subset (e.g., show one facet first)\n\n-   Aim for memorable, but clear\n\n::: {.callout-note appearance=\"minimal\"}\n**Project note:** Make sure to leave time to iterate on your plots after you practice your presentation. If certain plots or outputs are getting too wordy to explain, take time to simplify them!\n:::\n\n## Consistency vs. repetitiveness\n\n> Be consistent but don't be repetitive.\n\n-   Use consistent features throughout plots (e.g., same color represents same level on all plots)\n\n-   Aim to use a different type of summary or visualization for each distinct analysis\n\n::: {.callout-note appearance=\"minimal\"}\n**Project note:** If possible, ask a friend who is not in the class to listen to your presentation and then ask them what they remember. Then, ask yourself: is that what you wanted them to remember?\n:::\n\n## Your project plans\n\n::: task\nHow are you telling your story?\n\na.  Sequential reveal\n\nb.  Instant reveal\n\nc.  Our approach doesn't fit either of these paradigms\n\nd.  No idea\n\nSubmit your answer on Canvas for 12-06 Check-in (access code: `___`)\n:::\n\n# Designing effective visualizations\n\n## Data\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nd <- tribble(\n  ~category,                     ~value,\n  \"Cutting tools\"                , 0.03,\n  \"Buildings and administration\" , 0.22,\n  \"Labor\"                        , 0.31,\n  \"Machinery\"                    , 0.27,\n  \"Workplace materials\"          , 0.17\n)\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 Ã— 2\n  category                     value\n  <chr>                        <dbl>\n1 Cutting tools                 0.03\n2 Buildings and administration  0.22\n3 Labor                         0.31\n4 Machinery                     0.27\n5 Workplace materials           0.17\n```\n\n\n:::\n:::\n\n\n## Keep it simple\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/pie.jpg)\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-3-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## Judging relative area\n\n![](images/pie-areas.png){fig-align=\"center\" width=\"800\"}\n\n. . .\n\n![](images/bar-areas.png){fig-align=\"center\" width=\"800\"}\n\n::: aside\nFrom Data to Viz caveat collection - [The issue with pie chart](https://www.data-to-viz.com/caveat/pie.html)\n:::\n\n## Use color to draw attention\n\n<br/> <br/>\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-4-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-5-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## Play with themes for a non-standard look {.smaller}\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-6-1.png){width=100%}\n:::\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-6-2.png){width=100%}\n:::\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-6-3.png){width=100%}\n:::\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-6-4.png){width=100%}\n:::\n:::\n\n\n## Go beyond ggplot2 themes -- ggthemes {.smaller}\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-7-1.png){width=100%}\n:::\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-7-2.png){width=100%}\n:::\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-7-3.png){width=100%}\n:::\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-7-4.png){width=100%}\n:::\n:::\n\n\n## Tell a story\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/duke-hires-1.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/duke-hires-2.png){fig-align=\"center\"}\n:::\n:::\n\n::: aside\n*Credit*: Angela Zoss and Eric Monson, Duke DVS\n:::\n\n## Leave out non-story details\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/too-many-details.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/fewer-details.png){fig-align=\"center\"}\n:::\n:::\n\n::: aside\n*Credit*: Angela Zoss and Eric Monson, Duke DVS\n:::\n\n## Order matters\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/unordered.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/ordered.png){fig-align=\"center\"}\n:::\n:::\n\n::: aside\n*Credit*: Angela Zoss and Eric Monson, Duke DVS\n:::\n\n## Clearly indicate missing data\n\n![](images/missing-data.png){fig-align=\"center\"}\n\n::: aside\nhttp://ivi.sagepub.com/content/10/4/271, Angela Zoss and Eric Monson, Duke DVS\n:::\n\n## Reduce cognitive load\n\n![](images/cognitive-load.png){fig-align=\"center\"}\n\n::: aside\nhttp://www.storytellingwithdata.com/2012/09/some-finer-points-of-data-visualization.html\n:::\n\n## Use descriptive titles\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/title-non-descriptive.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/title-descriptive.png){fig-align=\"center\"}\n:::\n:::\n\n::: aside\n*Credit*: Angela Zoss and Eric Monson, Duke DVS\n:::\n\n## Annotate figures\n\n![](images/annotate.png){fig-align=\"center\"}\n\n::: aside\nhttps://bl.ocks.org/susielu/23dc3082669ee026c552b85081d90976\n:::\n\n# Plot sizing and layout\n\n## Sample plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_hist <- ggplot(mtcars, aes(x = mpg)) +\n  geom_histogram(binwidth = 2)\n\np_text <- mtcars |>\n  rownames_to_column() |>\n  ggplot(aes(x = disp, y = mpg)) +\n  geom_text_repel(aes(label = rowname)) +\n  coord_cartesian(clip = \"off\")\n```\n:::\n\n\n## Small `fig-width`\n\nFor a zoomed-in look\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| fig-width: 3\n#| fig-asp: 0.618\n\np_hist\n```\n````\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-9-1.png){width=288}\n:::\n:::\n\n\n## Large `fig-width`\n\nFor a zoomed-out look\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| fig-width: 6\n#| fig-asp: 0.618\n\np_hist\n```\n````\n\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-10-1.png){width=576}\n:::\n:::\n\n\n## `fig-width` affects text size\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-11-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](24-tell-data-story_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Multiple plots on a slide\n\n::: {.callout-warning appearance=\"minimal\"}\nFirst, ask yourself, must you include multiple plots on a slide? For example, is your narrative about comparing results from two plots?\n:::\n\n-   If no, then don't! Move the second plot to to the next slide!\n\n-   If yes, use columns and sequential reveal.\n\n# Quarto\n\n## Writing your project report with Quarto\n\n-   Figure sizing: `fig-width`, `fig-height`, etc. in code chunks.\n\n-   Figure layout: `layout-ncol` for placing multiple figures in a chunk.\n\n-   Further control over figure layout with the **patchwork** package.\n\n-   Chunk options around what makes it in your final report: `message`, `echo`, etc.\n\n-   Cross referencing figures and tables.\n\n-   Adding footnotes and citations.\n\n## Cross referencing figures {.smaller}\n\n::: panel-tabset\n## Output\n\nAs seen in @fig-penguins, there is a positive and relatively strong relationship between body mass and flipper length of penguins.\n\n\n::: {.cell layout-align=\"left\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![The relationship between body mass and flipper length of penguins.](24-tell-data-story_files/figure-revealjs/fig-penguins-1.png){#fig-penguins fig-align='left' width=480}\n:::\n:::\n\n\n## Input\n\n````         \nAs seen in @fig-penguins, there is a positive and relatively strong relationship between body mass and flipper length of penguins.\n\n```{{r}}\n#| label: fig-penguins\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n```\n````\n:::\n\n## Cross referencing tables {.smaller}\n\n::: panel-tabset\n## Output\n\nThe regression output is shown in @tbl-penguins-lm.\n\n\n::: {#tbl-penguins-lm .cell tbl-cap='The regression output for predicting body mass from flipper length of penguins.'}\n\n```{.r .cell-code}\npenguins_fit <- linear_reg() |>\n  fit(body_mass_g ~ flipper_length_mm, data = penguins)\n\ntidy(penguins_fit) |>\n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term              |  estimate| std.error| statistic| p.value|\n|:-----------------|---------:|---------:|---------:|-------:|\n|(Intercept)       | -5780.831|   305.815|   -18.903|       0|\n|flipper_length_mm |    49.686|     1.518|    32.722|       0|\n\n\n:::\n:::\n\n\n## Input\n\n````         \nThe regression output is shown in @tbl-penguins-lm.\n\n```{{r}}\n#| label: tbl-penguins-lm\n#| tbl-cap: The regression output for predicting body mass from flipper length of penguins.\n\npenguins_fit <- linear_reg() |>\n  fit(body_mass_g ~ flipper_length_mm, data = penguins)\n\ntidy(penguins_fit) |>\n  knitr::kable(digits = 3)\n```\n````\n:::\n",
    "supporting": [
      "24-tell-data-story_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}